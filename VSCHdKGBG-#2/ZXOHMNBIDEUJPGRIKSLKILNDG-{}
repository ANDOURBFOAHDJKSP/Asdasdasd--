local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/turtle"))()

local OwO = library:Window("Main")
local Lol = library:Window("LocalPlayer")

local wait = task.wait
local spawn = task.spawn
local Players = game:GetService("Players")
local Player = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")
local VirtualInputManager = game:GetService('VirtualInputManager')
local TeleportService = game:GetService("TeleportService")
for i,v in pairs(getconnections(Player.Idled)) do
    v:Disable()
end 

OwO:Label("Zombie Mods", Color3.fromRGB(127, 143, 166))

--[[
local HeadZombies = false
local HeadSize = 5
local ShowHead = false

OwO:Toggle("Big Head", false, function(bool)
HeadZombies = bool
while HeadZombies and wait(0.2) do
for i,v in next, game:GetService('Workspace').Zombies:GetChildren() do
pcall(function()
 v:FindFirstChild("Head").Size = Vector3.new(HeadSize, HeadSize, HeadSize)
-- v.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
-- v.HumanoidRootPart.Material = "Neon"
-- v.HumanoidRootPart.CanCollide = false
end)
end
end
end)

OwO:Slider("Head Size",1,7,5, function(value)
   HeadSize = value
end)
]]

--[[
local HitboxExpander = false
local SizeHitbox = 5
local ShowHitbox = false

OwO:Toggle("Hitbox Expander", false, function(bool)
    HitboxExpander = bool
 
 while HitboxExpander and wait(0.1) do
 for i,v in next, game:GetService('Workspace').Zombies:GetChildren() do
pcall(function()
 v.HumanoidRootPart.Size = Vector3.new(SizeHitbox, SizeHitbox, SizeHitbox)
-- v.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
-- v.HumanoidRootPart.Material = "Neon"
-- v.HumanoidRootPart.CanCollide = false
end)

if ShowHitbox then
v.HumanoidRootPart.Transparency = 0.7
else
v.HumanoidRootPart.Transparency = 1
end

end
 end
end)

OwO:Toggle("Show Hitbox", false, function(bool2)
ShowHitbox = bool2
end)

OwO:Slider("Hitbox Size", 1, 100, 5, function(value)
    SizeHitbox = tonumber(value) or 5
end)

]]

local HitPart = false
local HitPartType = "HumanoidRootPart"
local DistanceToBring = 25
local ShowHitPart = false

-- Distances Position
local DistanceX = 25
local DistanceY = 3
local DistanceZ = 25

OwO:Toggle("Bring HitPart", false, function(bool)
    HitPart = bool
    while HitPart and wait(0.1) do
        local player = game.Players.LocalPlayer
        local charpart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        
        if charpart then
            for i, v in pairs(game:GetService("Workspace").Zombies:GetChildren()) do
                local zombieRootPart = v:FindFirstChild("HumanoidRootPart")
                local zombieHumanoid = v:FindFirstChild("Humanoid")
                
                local clone = nil
                for _, part in pairs(v:GetChildren()) do
                    if part:IsA("BasePart") and part:FindFirstChild("IsClone") then
                        clone = part
                        break
                    end
                end
                
                if zombieRootPart then
                    local distance = (charpart.Position - zombieRootPart.Position).Magnitude
                    local distanceX = math.abs(charpart.Position.X - zombieRootPart.Position.X)
                    local distanceY = math.abs(charpart.Position.Y - zombieRootPart.Position.Y)
                    local distanceZ = math.abs(charpart.Position.Z - zombieRootPart.Position.Z)
                    
                    if distance <= DistanceToBring and distanceX <= DistanceX and distanceY <= DistanceY and distanceZ <= DistanceZ then
                        if not clone then
                            local BypassCFrameKick = zombieRootPart:Clone()
                            BypassCFrameKick.Anchored = true
                            BypassCFrameKick.Name = HitPartType
                            BypassCFrameKick.OriginalSize.Value = Vector3.new(3, 3, 3)
                            BypassCFrameKick.Size = Vector3.new(3, 3, 3)             
                            
                            local isClone = Instance.new("BoolValue")
                            isClone.Name = "IsClone"
                            isClone.Parent = BypassCFrameKick
                            
                            BypassCFrameKick.Parent = v
                            clone = BypassCFrameKick
                        end
                        local offset = charpart.CFrame:VectorToWorldSpace(Vector3.new(0, 0, -6))
                        clone.Position = charpart.Position + offset
                        clone.Name = HitPartType
                            if ShowHitPart then
                             clone.Transparency = 0.7
                          else
                             clone.Transparency = 1
                        end
                    end
                end
            end
        end
    end
end)

OwO:Toggle("Show HitPart", false, function(bool2)
ShowHitPart = bool2
end)

local dropdown = OwO:Dropdown("HitPart Type", {"Head", "HumanoidRootPart", "UpperTorso"}, function(name)
   HitPartType = tostring(name)
end)

OwO:Slider("Bring HitPart Distance", 1, 100, 25, function(value)
    DistanceToBring = tonumber(value) or 25
    DistanceX = tonumber(value) or 25
    DistanceZ = tonumber(value) or 25
end)

OwO:Label("Gun Mods", Color3.fromRGB(127, 143, 166))

local fastfire = false
local CamLock = false
local MaxDmg = false
local NoReloader= false
local fastswinging = false

OwO:Toggle("Fast Swinging", false, function(OhValue)
fastswinging = OhValue
repeat
wait(10)
pcall(function()
for i,v in pairs(getgc(true)) do
   if type(v) == 'table' and rawget(v, 'swinganims') then
v.swinganims[1][1][6] = 0
v.swinganims[1][2][6] = 0
v.swinganims[1][3][6] = 0
v.swinganims[1][4][6] = 0
v.swinganims[2][1][6] = 0
v.swinganims[2][2][6] = 0
v.swinganims[2][3][6] = 0
v.swinganims[2][4][6] = 0
v.swinganims[3][1][6] = 0
v.swinganims[3][2][6] = 0
v.swinganims[3][3][6] = 0
v.swinganims[3][4][6] = 0
v.swinganims[4][1][6] = 0
v.swinganims[4][2][6] = 0
v.swinganims[4][3][6] = 0
v.swinganims[4][4][6] = 0
v.range = 999999999
end
end
end)
until fastswinging == false
end)

OwO:Toggle("Fast Fire", false, function(bool7)
fastfire = bool7
repeat
wait(10)
local spread1 = {
  Increase = 0,
  Decrease = 0,
  Max = 0,
  Min = 0
}

local rec = {
  Tilt = { 0, 0 },
  Side = { 0, 0 },
  Vertical = { 0, 0 },
  Back = { 0, 0 },
  Aimed = 0,
  FirstShot = 0
}

pcall(function()
for i,v in pairs(getgc(true)) do
   if type(v) == 'table' and rawget(v, 'magsize') then
       v.magsize = math.huge
       v.storedammo = math.huge
       v.rpm = math.huge
       v.spread = spread1
       v.recoil = rec
       v.mode = "Auto"
   end
end
end)
until fastfire == false
end)

OwO:Toggle("Max Damage", false, function(damn)
MaxDmg = damn

repeat
wait(10)
pcall(function() 
for i,v in pairs(getgc(true)) do
   if type(v) == 'table' and rawget(v, 'damage') then
     v.damage[1][1] = 9999
     v.damage[1][2] = 9999
     v.damage[2][1] = 9999
     v.damage[2][2] = 9999
     end
   end
end)
until MaxDmg == false
end)

OwO:Toggle("No Reloading", false, function(noice)
NoReloader = noice

while NoReloader and wait(0.1) do
game:GetService("ReplicatedStorage").RemoteEvent:FireServer("Reloaded", "3")
end
end)

OwO:Label("Auto Collection", Color3.fromRGB(127, 143, 166))

local AutoCollectPowerUps = false
local AutoCollectRewards = false

OwO:Toggle("Power Ups", false, function(bool4)
AutoCollectPowerUps = bool4
while AutoCollectPowerUps and wait(1) do
       if game:GetService("Workspace").Ignore:FindFirstChild("PowerUps") then
                for i,v in pairs(game:GetService("Workspace").Ignore.PowerUps:GetChildren()) do
                    v.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
                    v.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                  -- firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                 --   task.wait(0.1)
               --     firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                end
            end
       end
end)

-- Lol

Lol:Button("God Mode (Can Bypass Speed)", function()
local isGod = false
local char = game.Players.LocalPlayer.Character
local originalhumanoid = char.Humanoid
local clonehumanoid = char.Humanoid:Clone()
clonehumanoid.Parent = nil
wait(0.1)
char.Humanoid:Destroy()
clonehumanoid.Parent = char

local animator = clonehumanoid:FindFirstChild("Animator")
if not animator then
animator = Instance.new("Animator")
animator.Parent = clonehumanoid
end

local f = Instance.new("ForceField")
f.Parent = char
f.Visible = false
wait(0.1)
f.Visible = true

isGod = true

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
 
local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil
    
    local function Update(input)
        local Delta = input.Position - DragStart
        local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
        local Tween = TweenService:Create(object, TweenInfo.new(0.15), {
            Position = pos
        })
        Tween:Play()
    end
    
    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position
                
                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )
    
    topbarobject.InputChanged:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                DragInput = input
            end
        end
    )
    
    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local isGod = true  -- Assuming this is set somewhere else in your code

local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(0, 100, 0, 100) 
jumpButton.Position = UDim2.new(1, -110, 1, -110)
jumpButton.Text = ""
jumpButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)  -- Gray color
jumpButton.TextColor3 = Color3.new(1, 1, 1)  -- White text color
jumpButton.Parent = screenGui

local jumpIcon = Instance.new("ImageLabel")
jumpIcon.Size = UDim2.new(1, 0, 1, 0)
jumpIcon.Position = UDim2.new(0, 0, 0, 0)
jumpIcon.BackgroundTransparency = 1
jumpIcon.Image = "rbxassetid://18154379297" 
jumpIcon.Parent = jumpButton

local function makePlayerJump()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if isGod and humanoid and humanoid.FloorMaterial ~= Enum.Material.Air then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == Enum.KeyCode.Space then
        makePlayerJump()
    end
end)

jumpButton.Activated:Connect(makePlayerJump)

MakeDraggable(jumpIcon, jumpButton)

UserInputService.JumpRequest:Connect(makePlayerJump)
end)

Lol:Slider("Walk-Speed",1,100,16, function(Speed)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(Speed)
   game.Players.LocalPlayer.Character.Humanoid:SetAttribute("DefaultWalkSpeed", tonumber(Speed))
end)

Lol:Slider("Jump-Power",1,100,50, function(Jump)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(Jump)
   game.Players.LocalPlayer.Character.Humanoid:SetAttribute("DefaultJumpPower", tonumber(Jump))
end)

--[[
(Only Available for Hitbox Expander)

-- Bypass Anti Cheat V2
local a = getrawmetatable(game)
local b = a.__namecall
setreadonly(a, false)

a.__namecall = newcclosure(function(self, ...)
    local Args = {...}
    if tostring(self) == "RemoteEvent" then
        if Args[1] == "K" then
            return nil
        end
    end
    return b(self, unpack(Args))
end)
]]